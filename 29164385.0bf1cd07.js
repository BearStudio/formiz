(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{62:function(e,n,a){"use strict";a.r(n),a.d(n,"frontMatter",(function(){return l})),a.d(n,"metadata",(function(){return m})),a.d(n,"rightToc",(function(){return o})),a.d(n,"default",(function(){return c}));var i=a(2),t=a(6),r=(a(0),a(83)),s=["components"],l={id:"rules",title:"Validation Rules"},m={unversionedId:"validations/rules",id:"validations/rules",isDocsHomePage:!1,title:"Validation Rules",description:"isRequired()",source:"@site/docs/validations/rules.mdx",slug:"/validations/rules",permalink:"/docs/validations/rules",editUrl:"https://github.com/ivan-dalmet/formiz/edit/master/documentation/docs/validations/rules.mdx",version:"current",sidebar:"docs",previous:{title:"useField() hook",permalink:"/docs/core/use-field"}},o=[{value:"isRequired()",id:"isrequired",children:[]},{value:"isNotEmptyString()",id:"isnotemptystring",children:[]},{value:"isNotEmptyArray()",id:"isnotemptyarray",children:[]},{value:"isEmail()",id:"isemail",children:[]},{value:"isNumber()",id:"isnumber",children:[]},{value:"isMinNumber(min)",id:"isminnumbermin",children:[]},{value:"isMaxNumber(max)",id:"ismaxnumbermax",children:[]},{value:"isInRangeNumber(min, max)",id:"isinrangenumbermin-max",children:[]},{value:"isPercentage()",id:"ispercentage",children:[]},{value:"isLength(length)",id:"islengthlength",children:[]},{value:"isMinLength(min)",id:"isminlengthmin",children:[]},{value:"isMaxLength(max)",id:"ismaxlengthmax",children:[]},{value:"isPattern(pattern)",id:"ispatternpattern",children:[]}],u={rightToc:o};function c(e){var n=e.components,a=Object(t.a)(e,s);return Object(r.b)("wrapper",Object(i.a)({},u,a,{components:n,mdxType:"MDXLayout"}),Object(r.b)("h3",{id:"isrequired"},"isRequired()"),Object(r.b)("p",null,"Tests if there is a value."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-jsx"},"import { isRequired } from '@formiz/validations'\n\n<MyField\n  name=\"fieldName\"\n  validations={[\n    {\n      rule: isRequired(),\n      message: 'This field is required',\n    },\n  ]}\n>\n")),Object(r.b)("h3",{id:"isnotemptystring"},"isNotEmptyString()"),Object(r.b)("p",null,"Tests if a string has not only spaces."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-jsx"},"import { isNotEmptyString } from '@formiz/validations'\n\n<MyField\n  name=\"fieldName\"\n  validations={[\n    {\n      rule: isNotEmptyString(),\n      message: 'This field can\\'t be empty',\n    },\n  ]}\n>\n")),Object(r.b)("h3",{id:"isnotemptyarray"},"isNotEmptyArray()"),Object(r.b)("p",null,"Tests if an array is not empty."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-jsx"},"import { isNotEmptyArray } from '@formiz/validations'\n\n<MyField\n  name=\"fieldName\"\n  validations={[\n    {\n      rule: isNotEmptyArray(),\n      message: 'This array can\\'t be empty',\n    },\n  ]}\n>\n")),Object(r.b)("h3",{id:"isemail"},"isEmail()"),Object(r.b)("p",null,"Tests if a string is a valid email."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-jsx"},"import { isEmail } from '@formiz/validations'\n\n<MyField\n  name=\"fieldName\"\n  validations={[\n    {\n      rule: isEmail(),\n      message: 'This is not a valid email',\n    },\n  ]}\n>\n")),Object(r.b)("h3",{id:"isnumber"},"isNumber()"),Object(r.b)("p",null,"Tests if the value is a number."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-jsx"},"import { isNumber } from '@formiz/validations'\n\n<MyField\n  name=\"fieldName\"\n  validations={[\n    {\n      rule: isNumber(),\n      message: 'This is not a number',\n    },\n  ]}\n>\n")),Object(r.b)("h3",{id:"isminnumbermin"},"isMinNumber(min)"),Object(r.b)("p",null,"Tests if the value is a number and above a min value."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-jsx"},"import { isMinNumber } from '@formiz/validations'\n\n<MyField\n  name=\"fieldName\"\n  validations={[\n    {\n      rule: isMinNumber(10),\n      message: 'Should be a number over 10',\n    },\n  ]}\n>\n")),Object(r.b)("h3",{id:"ismaxnumbermax"},"isMaxNumber(max)"),Object(r.b)("p",null,"Tests if the value is a number and under a max value."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-jsx"},"import { isMaxNumber } from '@formiz/validations'\n\n<MyField\n  name=\"fieldName\"\n  validations={[\n    {\n      rule: isMaxNumber(10),\n      message: 'Should be a number under 10',\n    },\n  ]}\n>\n")),Object(r.b)("h3",{id:"isinrangenumbermin-max"},"isInRangeNumber(min, max)"),Object(r.b)("p",null,"Tests if the value is a number and in a range between a min and a max."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-jsx"},"import { isInRangeNumber } from '@formiz/validations'\n\n<MyField\n  name=\"fieldName\"\n  validations={[\n    {\n      rule: isInRangeNumber(1, 5),\n      message: 'Should be a number between 1 and 5',\n    },\n  ]}\n>\n")),Object(r.b)("h3",{id:"ispercentage"},"isPercentage()"),Object(r.b)("p",null,"Tests if the value is a number between 0 and 100."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-jsx"},"import { isInRangeNumber } from '@formiz/validations'\n\n<MyField\n  name=\"fieldName\"\n  validations={[\n    {\n      rule: isPercentage(),\n      message: 'This is not a valid percentage',\n    },\n  ]}\n>\n")),Object(r.b)("h3",{id:"islengthlength"},"isLength(length)"),Object(r.b)("p",null,"Tests if a string or an array has a specific length."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-jsx"},"import { isLength } from '@formiz/validations'\n\n<MyField\n  name=\"fieldName\"\n  validations={[\n    {\n      rule: isLength(4),\n      message: 'This has not a length of 4',\n    },\n  ]}\n>\n")),Object(r.b)("h3",{id:"isminlengthmin"},"isMinLength(min)"),Object(r.b)("p",null,"Tests if a string or an array has a minimum length."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-jsx"},"import { isMinLength } from '@formiz/validations'\n\n<MyField\n  name=\"fieldName\"\n  validations={[\n    {\n      rule: isMinLength(4),\n      message: 'This should at least have a length of 4',\n    },\n  ]}\n>\n")),Object(r.b)("h3",{id:"ismaxlengthmax"},"isMaxLength(max)"),Object(r.b)("p",null,"Tests if a string or an array has a maximum length."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-jsx"},"import { isMaxLength } from '@formiz/validations'\n\n<MyField\n  name=\"fieldName\"\n  validations={[\n    {\n      rule: isMaxLength(4),\n      message: 'This should have a length of 4 or less',\n    },\n  ]}\n>\n")),Object(r.b)("h3",{id:"ispatternpattern"},"isPattern(pattern)"),Object(r.b)("p",null,"Tests if a string matches a REGEX pattern."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-jsx"},"import { isMaxLength } from '@formiz/validations'\n\n<MyField\n  name=\"fieldName\"\n  validations={[\n    {\n      rule: isPattern('hello'),\n      message: 'Must contain \"hello\"',\n    },\n    {\n      rule: isPattern('^[a-z]*$'),\n      message: 'Must only contain lowercase letters',\n    },\n  ]}\n>\n")))}c.isMDXComponent=!0},83:function(e,n,a){"use strict";a.d(n,"a",(function(){return c})),a.d(n,"b",(function(){return p}));var i=a(0),t=a.n(i);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function s(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,i)}return a}function l(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?s(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function m(e,n){if(null==e)return{};var a,i,t=function(e,n){if(null==e)return{};var a,i,t={},r=Object.keys(e);for(i=0;i<r.length;i++)a=r[i],n.indexOf(a)>=0||(t[a]=e[a]);return t}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)a=r[i],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(t[a]=e[a])}return t}var o=t.a.createContext({}),u=function(e){var n=t.a.useContext(o),a=n;return e&&(a="function"==typeof e?e(n):l(l({},n),e)),a},c=function(e){var n=u(e.components);return t.a.createElement(o.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.a.createElement(t.a.Fragment,{},n)}},b=t.a.forwardRef((function(e,n){var a=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,o=m(e,["components","mdxType","originalType","parentName"]),c=u(a),b=i,p=c["".concat(s,".").concat(b)]||c[b]||d[b]||r;return a?t.a.createElement(p,l(l({ref:n},o),{},{components:a})):t.a.createElement(p,l({ref:n},o))}));function p(e,n){var a=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=a.length,s=new Array(r);s[0]=b;var l={};for(var m in n)hasOwnProperty.call(n,m)&&(l[m]=n[m]);l.originalType=e,l.mdxType="string"==typeof e?e:i,s[1]=l;for(var o=2;o<r;o++)s[o]=a[o];return t.a.createElement.apply(null,s)}return t.a.createElement.apply(null,a)}b.displayName="MDXCreateElement"}}]);